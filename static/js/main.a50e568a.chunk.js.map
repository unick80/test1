{"version":3,"sources":["App.js","panels/Home.js","panels/Persik.js","img/Cat.jpg","panels/Rabbit.js","img/Rabbit.jpg","index.js"],"names":["global","qrcode","App","useState","activePanel","setActivePanel","fetchedUser","setUser","size","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","go","e","currentTarget","dataset","to","QRCode","toDataURL","width","height","margin","err","url","src","id","Home","title","alt","osName","platform","Persik","props","left","onClick","data-to","IOS","className","persik","module","exports","Rabbit","rabbit","ReactDOM","render","getElementById"],"mappings":"6QAWAA,EAAOC,OAAS,SA4CDC,IA1CH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVG,EAFU,KAEGC,EAFH,OAGWJ,mBAAS,kBAAC,IAAD,CAAeK,KAAK,WAHxC,mBAGVC,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECR,EAAQQ,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAMC,EAAK,SAAAC,GACVzB,EAAeyB,EAAEC,cAAcC,QAAQC,KAWxC,OARCC,IAAOC,UAAUnC,EAAOC,OAAS,CACjCmC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACN,SAAUC,EAAKC,GACjBxC,EAAOyC,IAAMD,KAIb,kBAAC,IAAD,CAAMpC,YAAaA,EAAaK,OAAQA,GACvC,kBAAC,IAAD,CAAMiC,GAAG,OAAOpC,YAAaA,EAAauB,GAAIA,EAAIY,IAAKzC,EAAOyC,IAAKxC,OAAQD,EAAOC,SAClF,kBAAC,IAAD,CAAQyC,GAAG,SAASb,GAAIA,IACxB,kBAAC,IAAD,CAAQa,GAAG,SAASb,GAAIA,Q,mDClD3B,0FAkDec,IAxCF,SAAC,GAAD,IAAGD,EAAH,EAAGA,GAAqBD,GAAxB,EAAOZ,GAAP,EAAWvB,YAAX,EAAwBmC,KAAKxC,EAA7B,EAA6BA,OAA7B,OACZ,kBAAC,IAAD,CAAOyC,GAAIA,GACV,kBAAC,IAAD,gEAYA,kBAAC,IAAD,CAAOE,MAAM,2DACZ,kBAAC,IAAD,KACC,gCACC,yBAAKH,IAAKA,EAAKI,IAAI,WACnB,2BAAG,4BAAK5C,U,iCC5Bb,mIAYM6C,GAZN,OAYeC,eAoBAC,IAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOP,GAAIO,EAAMP,IAChB,kBAAC,IAAD,CACCQ,KAAM,kBAAC,IAAD,CAAmBC,QAASF,EAAMpB,GAAIuB,UAAQ,QAClDN,IAAWO,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,wCAOA,yBAAKC,UAAU,SAASb,IAAKc,IAAQV,IAAI,+D,oBCvB3CW,EAAOC,QAAU,IAA0B,iC,iCCA3C,mIAYMX,GAZN,OAYeC,eAoBAW,IAlBA,SAAAT,GAAK,OACnB,kBAAC,IAAD,CAAOP,GAAIO,EAAMP,IAChB,kBAAC,IAAD,CACCQ,KAAM,kBAAC,IAAD,CAAmBC,QAASF,EAAMpB,GAAIuB,UAAQ,QAClDN,IAAWO,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,kCAOA,yBAAKC,UAAU,SAASb,IAAKkB,IAAQd,IAAI,yD,oBCvB3CW,EAAOC,QAAU,IAA0B,oC,saCQ3C5C,IAAOC,KAAK,gBAEZ8C,IAASC,OAAO,kBAAC,IAAD,MAASxC,SAASyC,eAAe,U","file":"static/js/main.a50e568a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport QRCode from 'qrcode';\r\n\r\nimport Home from './panels/Home';\r\nimport Persik from './panels/Persik';\r\nimport Rabbit from './panels/Rabbit';\r\n\r\nglobal.qrcode = '109357';\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\t\tQRCode.toDataURL(global.qrcode,  {\r\n\t\twidth: 320,\r\n\t\theight: 320,\r\n\t\tmargin: 0\r\n\t}, function (err, url) {\r\n\t\tglobal.src = url;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel} popout={popout}>\r\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} src={global.src} qrcode={global.qrcode}/>\r\n\t\t\t<Persik id='persik' go={go} />\r\n\t\t\t<Rabbit id='rabbit' go={go} />\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\n//import Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n//import Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n\r\nconst Home = ({ id, go, fetchedUser, src, qrcode}) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Код скидки</PanelHeader>\r\n\t\t{//fetchedUser &&\r\n\t\t//<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t//\t<Cell\r\n\t\t//\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t//\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t//\t>\r\n\t\t//\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t//</Group></Group>\t</Cell>\r\n\t\t//</Group>\r\n\t\t}\r\n\r\n\t\t<Group title=\"Код скидки\">\r\n\t\t\t<Div>\r\n\t\t\t\t<center>\r\n\t\t\t\t\t<img src={src} alt=\"QRcode\"/>\r\n\t\t\t\t\t<p><h1>{qrcode}</h1></p>\r\n\t\t\t\t</center>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tsrc: PropTypes.string.isRequired,\r\n\tqrcode: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport persik from '../img/Cat.jpg';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</PanelHeaderButton>}\r\n\t\t>\r\n\t\t\tКотяра\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Это котяра\"/>\r\n\t</Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;\r\n","module.exports = __webpack_public_path__ + \"static/media/Cat.33774deb.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport rabbit from '../img/Rabbit.jpg';\r\nimport './Rabbit.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Rabbit = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</PanelHeaderButton>}\r\n\t\t>\r\n\t\t\tКроль\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Rabbit\" src={rabbit} alt=\"Это кроль\"/>\r\n\t</Panel>\r\n);\r\n\r\nRabbit.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Rabbit;\r\n","module.exports = __webpack_public_path__ + \"static/media/Rabbit.f94fa09b.jpg\";","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}